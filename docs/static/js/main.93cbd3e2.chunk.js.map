{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mNA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,kBAAC,WAAD,KACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAOZ,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAflB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXhB,kBAcdM,GAdc,4CAAH,sDCWLO,EATY,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,yBAAKc,UAAU,8CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCgBKO,EAlBC,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDR,SAACA,GAAe,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OANAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAAChB,GACvBc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SAEjC,CAACpB,IAEGqB,EDVyBI,CAAYzB,GAA9BQ,EADmB,EACzBD,KAAYa,EADa,EACbA,QAEpB,OACE,kBAAC,WAAD,KACE,wBAAIJ,UAAU,yCAAyChB,GACtDoB,GACC,uBAAGJ,UAAU,oCAAb,qBAEF,yBAAKA,UAAU,aACZR,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEUzBiB,EArBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,YADrB,mBAClB0C,EADkB,KACN3C,EADM,KAOzB,OACE,kBAAC,WAAD,KACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,EAAe2C,WAAYA,IACvD,6BACA,4BACGA,EAAWnB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS0B,IAAK1B,EAAWA,UAAWA,U,MCb9C6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.93cbd3e2.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (categoria) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=10&api_key=pZF5taT2C8y5Jk6AOVAZpZhF7B0b4j17`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n  const { data: gifs, loading } = useFetchGif(categoria);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className=\"animate__animated animate__fadeInLeft\">{categoria}</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">generando gifs...</p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {gifs.map((gif) => (\r\n          <GifGridItem key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((gifs) => {\r\n      setState({ data: gifs, loading: false });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"Metroid\"]);\r\n\r\n  /*   const handleAdd = () => {\r\n    setCategorias([...categorias, \"Metroid\"]);\r\n  }; */\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategorias={setCategorias} categorias={categorias} />\r\n      <hr />\r\n      <ul>\r\n        {categorias.map((categoria) => (\r\n          <GifGrid key={categoria} categoria={categoria} />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}